# Copyright (c) 2020 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

ARG OPENVINO_IMAGE_VERSION
ARG EII_VERSION
ARG DOCKER_REGISTRY
FROM ${DOCKER_REGISTRY}ia_common:$EII_VERSION as common
FROM ${DOCKER_REGISTRY}ia_openvino_base:$EII_VERSION as openvino_base
FROM ${DOCKER_REGISTRY}ia_eiibase:$EII_VERSION as base

ENV EII_VERSION ${EII_VERSION}
WORKDIR /eii/common
ARG CMAKE_INSTALL_PREFIX
ENV CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}
COPY --from=common ${CMAKE_INSTALL_PREFIX}/include ${CMAKE_INSTALL_PREFIX}/include
COPY --from=common ${CMAKE_INSTALL_PREFIX}/lib ${CMAKE_INSTALL_PREFIX}/lib
COPY --from=common ${CMAKE_INSTALL_PREFIX}/bin/protoc* ${CMAKE_INSTALL_PREFIX}/bin/
COPY --from=common ${CMAKE_INSTALL_PREFIX}/bin/grpc* ${CMAKE_INSTALL_PREFIX}/bin/
COPY --from=common /root/.local/bin/cythonize /root/.local/bin/cythonize
# Copying only the installed python packages with `pip3 install --user -r` command
COPY --from=common /root/.local/lib/python3.6/site-packages /root/.local/lib/python3.6/site-packages
COPY --from=common /eii/common/cmake cmake
COPY --from=common /eii/common/libs libs
COPY --from=common /eii/common/util util

COPY --from=openvino_base /opt/intel/ /opt/intel

COPY UDFLoader/requirements.txt UDFLoader/requirements.txt
RUN pip3 install --user -r UDFLoader/requirements.txt

COPY udfs/python/sample_onnx/requirements.txt udfs/python/sample_onnx/requirements.txt
RUN pip3 install --user -r udfs/python/sample_onnx/requirements.txt

COPY UDFLoader UDFLoader

# Adding path of cython executable to PATH env
ENV PATH="$PATH:/root/.local/bin"

# Build Intel® RealSense™ SDK 2.0
ARG LIBREALSENSE_VER=https://github.com/IntelRealSense/librealsense/archive/v2.41.0.tar.gz

RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    libssl-dev \
    libusb-1.0-0-dev \
    libgtk-3-dev \
    libglfw3-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    pkg-config && \
    rm -rf /var/lib/apt/lists/*

RUN wget -O - ${LIBREALSENSE_VER} | tar xz && \
    cd librealsense-2.41.0 && \
    mkdir build && \
    cd build && \
    cmake ../ -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} && \
    make && \
    make install && \
    cd ../ && \
    rm -rf librealsense-2.41.0

# Build UDF loader lib
RUN /bin/bash -c "echo $PATH && \
                  source /opt/intel/openvino/bin/setupvars.sh && \
                  cd UDFLoader && \
                  rm -rf build && \
                  mkdir build && \
                  cd build && \
                  cmake -DCMAKE_INSTALL_INCLUDEDIR=$CMAKE_INSTALL_PREFIX/include -DCMAKE_INSTALL_PREFIX=$CMAKE_INSTALL_PREFIX -DWITH_TESTS=${RUN_TESTS} -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} .. && \
                  make && \
                  if [ "${RUN_TESTS}" = "ON" ] ; then \
                     cd ./tests && \
                     source ./source.sh && \
                     ./frame-tests && \
                     ./udfloader-tests && \
                     cd .. ; \
                  fi && \
                  make install"

COPY udfs/native video/udfs/native
# Build native UDF samples
RUN /bin/bash -c "source /opt/intel/openvino/bin/setupvars.sh && \
                  cd video/udfs/native && \
                  rm -rf build && \
                  mkdir build && \
                  cd build && \
                  cmake -DCMAKE_INSTALL_INCLUDEDIR=$CMAKE_INSTALL_PREFIX/include -DCMAKE_INSTALL_PREFIX=$CMAKE_INSTALL_PREFIX -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} .. && \
                  make && \
                  make install"

COPY udfs/python video/udfs/python

